@model SADFM.Data.Models.Case
@using SADFM.Web.Shared;
@{

    ViewBag.Account = SADFM.Web.Shared.UserHelper.GetCurrentAccount();
    List<SADFM.Data.Models.Permission> perms = SADFM.Web.Shared.UserHelper.GetActivePermissions(ViewBag.Account);
    string clientType = SADFM.Web.Shared.UserHelper.SelectedClientType;
    string icd10Edit = string.Format("{0}{1}", Model.ICD10, Model.ICD10 == "Unknown" ? string.Empty : string.Concat(" - ", Model.ICD10Description));

    var impairmentClass = new List<SADFM.Data.Models.ListItem>(SADFM.Web.Shared.Constants.ImpairmentClassList);


    impairmentClass.Insert(0, new SADFM.Data.Models.ListItem()
    {
        ID = "",
        Name = "None",
        SortOrder = 0
    });

    SADFM.Base.NLogHelper.WriteEvent(NLog.LogLevel.Info, "Case.cshtml done");
}
<style>
    tbody tr {
        cursor: pointer;
    }

    .tblProvidersView tbody tr:hover {
        background-color: #ffff99 !important;
    }

    .smalldrop .chosen-container .chosen-drop .chosen-results {
        height: 100px;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>
            <img alt="image" class="img-circle" src="@Model.Patient.Avatar" id="avatar" width="75" height="75">
            @Model.Patient.FirstName&nbsp;@Model.Patient.LastName <small>Age @(Model.Patient.BirthDate.HasValue ? (Convert.ToInt32(DateTime.Now.Subtract(Model.Patient.BirthDate.Value).TotalDays) / (int)365).ToString() : ""),  @Model.Patient.Gender, @Model.Patient.Race</small>
        </h2>
        <ol class="breadcrumb">
            <li>
                <a href='@Url.Action("Index", "Home")'>Home</a>
            </li>
            <li>
                <a href="/Patient/Details?Patient=@SADFM.Data.Models.BaseModel.DecryptId(Model.PatientId).ToString("N")">Patient</a>
            </li>
            <li class="active">
                <strong>Case</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
        <br />
        <div class="row" style="text-align: center; margin-top:15px">
            <div class="col-xs-12">
                <a href="/Patient/Details?Patient=@SADFM.Data.Models.BaseModel.DecryptId(Model.PatientId).ToString("N")" class="btn btn-warning btn-sm" style="width: 90%;"><i class="fa fa-close"></i>&nbsp;Close</a>
            </div>
        </div>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" id="display-i-box">
                    <input type="hidden" id="patientId" value="@Model.PatientId">
                    <input type="hidden" id="caseId" value="@Model.CaseId">
                    <!--Case details-->
                    <div class="row">

                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-8">
                                    <h3>Case details</h3>
                                </div>
                                <div class="col-lg-4">
                                    <h4 class="pull-right">
                                        <button class="btn btn-primary" id="btn-edit-details">Edit</button>
                                    </h4>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>ICD 10</label>
                                </div>
                                <div class="col-lg-9">
                                    <label class="label-textentry" id="ICD10-static">@Model.ICD10 - @Model.ICD10Description</label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Impairment Group</label>
                                </div>
                                <div class="col-lg-9">
                                    <label class="label-textentry" id="impairmentgroup-static">@Model.ImpairmenGroup</label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Onset date</label>
                                </div>
                                <div class="col-lg-9">
                                    <label class="label-textentry" id="startdate-static">@Model.StartDate.ToString("dd MMM yyyy")</label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>End date</label>
                                </div>
                                <div class="col-lg-9">
                                    <label class="label-textentry" id="enddate-static">@(Model.EndDate.HasValue ? Model.EndDate.Value.ToString("dd MMM yyyy") : "")</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Admission Status</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="admissionstatus-static">@Model.AdmissionStatus</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="referringdoctor-static">@Model.ReferringDoctor</label>
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="treatingdoctor-static">@Model.TreatingDoctor</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor contact</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="referringdoctorcontact-static">@Model.ReferringDoctorContact</label>
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor contact</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="treatingdoctorcontact-static">@Model.TreatingDoctorContact</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor email</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="referringdoctoremail-static">@Model.ReferringDoctorEmail</label>
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor email</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="treatingoctoremail-static">@Model.TreatingDoctorEmail</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor practice number</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="referringdoctorpracticenumber-static">@Model.ReferringDoctorPracticeNumber</label>
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor practice number</label>
                                </div>
                                <div class="col-lg-3">
                                    <label class="label-textentry" id="treatingdoctorpracticenumber-static">@Model.TreatingDoctorPracticeNumber</label>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>


                <!--Edit Start-->
                <div class="ibox-content" style="display: none" id="edit-i-box">
                    <!--Case details-->
                    <div class="row">

                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-8">
                                    <h3>Case details</h3>
                                </div>
                                <div class="col-lg-4">
                                    <h4 class="pull-right">
                                        <button class="btn btn-success" id="btn-save-new-details">Save</button>
                                    </h4>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>ICD 10</label>
                                </div>
                                <div class="col-lg-9">
                                    <div id="scrollable-dropdown-menu">
                                        <input class="form-control typeahead" type="text" placeholder="Select primary diagnosis - ICD10" value="@icd10Edit" id="txtICD10Name" style="width:100%">
                                    </div>
                                </div>
                                <div class="col-lg-0" id="lblICD10Description">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Impairment Group</label>
                                </div>
                                <div class="col-lg-9">
                                    @SADFM.Web.Shared.HtmlHelper.DropdownBox(impairmentClass.ToList(), "ImpairmentGroupId",
                                             l => l.ID, l => string.IsNullOrWhiteSpace(l.ID) ? l.Name : l.ListValue + "." + l.Value + " - " + l.ListName + " - " + l.Name, "chosen-select", dataPlaceholder: "Select impairment group")
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Onset Date</label>
                                </div>
                                <div class="col-lg-9">
                                    <div id="caseStartDate">
                                        <div class="input-group date">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            <input type="text" class="form-control required" placeholder="Onset Date">
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-lg-3">
                                    <label>End date</label>
                                </div>
                                <div class="col-lg-9">
                                    <div id="caseEndDate">
                                        <div class="input-group date">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            <input type="text" class="form-control required" placeholder="End date">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Admission Status</label>
                                </div>
                                <div class="col-lg-3">
                                    @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Data.DataAccess.ListItem.GetList("AdmissionStatus", deep: false), "AdmissionStatusID", l => l.ID, l => l.Description, "chosen-select", dataPlaceholder: "Admission status")
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-referringdoctor" value="@Model.ReferringDoctor" />
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-treatingdoctor" value="@Model.TreatingDoctor" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor contact</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-referringdoctorcontact" value="@Model.ReferringDoctorContact" />
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor contact</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-treatingdoctorcontact" value="@Model.TreatingDoctorContact" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor email</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-referringdoctoremail" value="@Model.ReferringDoctorEmail" />
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor email</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-treatingdoctoremail" value="@Model.TreatingDoctorEmail" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <label>Referring doctor practice number</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-referringdoctorpracticenumber" value="@Model.ReferringDoctorPracticeNumber" />
                                </div>
                                <div class="col-lg-3">
                                    <label>Treating doctor practice number</label>
                                </div>
                                <div class="col-lg-3">
                                    <input type="text" class="form-control" id="txt-treatingdoctorpracticenumber" value="@Model.TreatingDoctorPracticeNumber" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <!--Edit End-->
                <!-- Providers -->
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-9">
                            <h3>Multi-Disciplinary Team (MDT)</h3>
                        </div>
                        <div class="col-lg-3 pull-right">
                            <button type="button" class="btn btn-primary btn-newprovider" data-backdrop="static" data-keyboard="false" style="width: 100%">
                                <i class="fa fa-plus"></i>&nbsp;Add
                            </button>
                        </div>
                    </div>
                    <table class="table table-striped table-bordered table-hover tblProvidersView">
                        <thead>
                            <tr>
                                <th>Case</th>
                                <th>Provider</th>
                                <th>Team Member</th>
                                <th>Roles</th>
                                <th>Allocation date</th>
                                <th>Discharge date</th>
                            </tr>
                        </thead>
                    </table>

                </div>


                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-6">
                            <h3>Current Care plan</h3>
                        </div>
                        @if (perms.FirstOrDefault(x => x.PermissionDescription == "Case Manager") != null)
                        {
                            <div class="col-lg-3">
                                <button type="button" class="btn btn-danger" id="btn-deletecareplan" data-backdrop="static" data-keyboard="false" style="width: 100%">
                                    <i class="fa fa-minus"></i>&nbsp;Discontinue an Assessment Tool
                                </button>
                            </div>
                            <div class="col-lg-3 pull-right">
                                <button type="button" class="btn btn-primary" id="btn-newcareplan" data-backdrop="static" data-keyboard="false" style="width: 100%">
                                    <i class="fa fa-plus"></i>&nbsp;Add an Assessment Tool
                                </button>
                            </div>

                        }
                    </div>
                    <table class="table table-striped table-bordered table-hover tblCarePlansView">
                        <thead>
                            <tr>
                                <th>Task</th>
                                <th>Minimum frequency</th>
                            </tr>
                        </thead>
                    </table>

                </div>


            </div>
        </div>
    </div>
</div>


@if (perms.FirstOrDefault(x => x.PermissionDescription == "Case Manager") != null)
{

    <div class="modal in modal" id="addCareDialog" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="addscale-title">Add an Assessment Tool</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-2">
                        </div>
                        <div class="col-lg-5">
                            @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Web.Shared.Constants.ScalesList.ToList(), "ScaleID", s => s.ID, s => s.Description, "chosen-select", dataPlaceholder: "Select task")
                            <label style="color: red;" class="error">Required</label>
                        </div>
                        <div class="col-lg-5">
                            @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Web.Shared.Constants.FrequencyList.OrderBy(x => x.SortOrder).ToList(), "FrequencyID", f => f.ID, f => f.Description, "chosen-select", dataPlaceholder: "Select frequency")
                            <label style="color: red;" class="error">Required</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" id="addCareDialogCancel">Cancel</button>
                    <button type="button" class="btn btn-primary" id="addCareDialogSave">Add</button>
                </div>
            </div>
        </div>
    </div>
}


<div class="modal inmodal" id="sendPatientProgressReport" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="addscale-title">Send email to referring doctor</h4>
            </div>
            <div class="modal-body">
                The case has been closed. Do you want to send a Patient Progress Report to the referring doctor?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" onclick="sendMailToReferringDoctor()">Yes</button>
                <input type="hidden" id="query" value="" />
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal" id="popupAdd" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                @if (clientType == "Provider")
                {
                    <h5 class="modal-title">Allocate a Team Member to</h5>
                    <h4 class="modal-title">@Model.Patient.FirstName @Model.Patient.LastName</h4>
                }
                else
                {

                    <h4 class="modal-title">Select Provider</h4>
                }
            </div>
            <div class="modal-body">

                <div class="row" id="providers-block">
                    <div class="col-lg-12">
                        @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Data.DataAccess.Provider.GetAllProviders().Where(x => !x.IsGroup).OrderBy(x => x.Name).ToList(), "ProviderID", p => p.ID, p => p.Name, "chosen-select", dataPlaceholder: "Select provider")
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6" style="vertical-align: middle; line-height: 36px;">
                        Allocation date
                    </div>

                    <div class="col-lg-6">
                        <div id="assignDate">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                <input type="text" class="form-control required" placeholder="Allocation date">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="discharge-block">
                    <div class="col-lg-6" style="vertical-align: middle; line-height: 36px;">
                        Discharge date
                    </div>
                    <div class="col-lg-6">
                        <div id="dischargeDate">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                <input type="text" class="form-control required" placeholder="Discharge date">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="individual-block">
                    <div class="col-lg-6" style="vertical-align: middle; line-height: 36px;">
                        Select a Team Member
                    </div>
                    <div class="col-lg-6" id="individual">
                    </div>
                </div>
                <div class="expandable" id="role-groups">
                    <div class="row">
                        <div class="col-lg-6">
                            (You may select more than one team member)
                        </div>
                        <div class="col-lg-6">
                            <a data-action="expand" class="hidden">
                                Show Advanced Options
                            </a>
                            <a data-action="shrink" class="hidden">
                                Hide Advanced Options
                            </a>
                        </div>
                    </div>
                    <div class="row expandable-content" style="display:none">
                        <div class="col-lg-6 col-lg-offset-6">
                            <ul id="roles">
                                @foreach (var role in SADFM.Web.Shared.Constants.RolesList)
                                {

                                    <li>
                                        @role.Description
                                        <ul>
                                            @foreach (var subrole in role.Children)
                                            {

                                                <li><input type="checkbox" value="@subrole.ID" /> @subrole.Description</li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="btn-addprovidersave">Add</button>
            </div>
        </div>
    </div>
</div>



@section Styles {
    @Styles.Render("~/plugins/wizardStepsStyles")
    @Styles.Render("~/plugins/dataTablesStyles")
    @Styles.Render("~/plugins/chosenStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/switcheryStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/typeahead")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/app/casetypeahead")
    @Scripts.Render("~/app/case")
    <script src="~/Scripts/plugins/expander/expander.js"></script>
    <script>
        var tableProvider;
        var selectedAccountID = null;
        var selectedIndividuals = [];
        $(document).ready(function () {



            initCaseTypeAhead();
            initCase();

            $('#txtICD10Name').focus(function () {
                if ($('#txtICD10Name').val() == 'Unknown') {
                    $('#txtICD10Name').val('');
                }
            });

            $('#txtICD10Name').blur(function () {
                if ($('#txtICD10Name').val() == '') {
                    $('#txtICD10Name').val('Unknown');
                }
            });

            $('#btn-edit-details').click(function () {
                $('#edit-i-box').css("display", "block");
                $('#display-i-box').css("display", "none");
            });

            $('.btn-newprovider').click(function () {

                @{

                    if (UserHelper.SelectedClientType != null)
                    {
                     if (UserHelper.SelectedClientType.Equals("Provider") && Request["popup"] == "true")
                     {

                         <text>
                $('#ProviderID').val('@SADFM.Data.Models.BaseModel.EncryptId(UserHelper.SelectedClientId)');

                </text>

                     }
                     }

                 }


                $('#discharge-block').css('display', 'none');
                $('#individual-block').css('display', 'block');
                $('#role-groups').css('display', 'block');
                $('#providers-block').css('display', 'block');

                $('#caseId').val('@Model.CaseId');
                $('#ProviderID').attr('disabled', false);
                $("#individual").html("");

                $('#ProviderID').trigger("chosen:updated");
                $('#ProviderID').change();

                $('#assignDate .input-group.date').datepicker('setDate', new Date().getDate() + "/" + (new Date().getMonth() + 1) + "/" + new Date().getFullYear());
                $('#dischargeDate .input-group.date').datepicker("setDate", '');
                $("#btn-addprovidersave").html("Add");
                $("#popupAdd").modal("show");
                $('#ProviderID').trigger('chosen:activate');
            });

            $("#btn-addprovidersave").unbind("click");
            $('#btn-addprovidersave').click(function () {


                var model = [];

                for (i = 0; i < $('#AccountID').val().length ; i++) {


                    model.push({

                        AssignedTimestamp: $('#assignDate').children('div').children('input').first().val(),
                        DischargedTimestamp: $('#dischargeDate').children('div').children('input').first().val(),
                        ProviderId: $('#ProviderID').val(),
                        CaseId: $('#caseId').val(),
                        AccountID: $('#AccountID').val()[i],
                        PatientId: '@Model.PatientId'
                    });
                }


                if ($('#ProviderID').val() == "") {
                    toastr.error("Select a Provider");
                    return;
                }

                if ($('#assignDate').children('div').children('input').first().val() == "") {
                    toastr.error("Select an Assign Date");
                    return;
                }

                if ($('#AccountID').val().length == 0) {
                    toastr.error("Select a Team Member.");
                    return;
                }


                $.ajax({
                    url: '/Patient/AddPatientProviders',
                    data: { model: model },
                    type: 'POST',
                    dataType: 'JSON',
                    success: function () {
                        $("#popupAdd").modal("hide");
                        $('.tblProvidersView').dataTable()._fnAjaxUpdate();
                    }
                });


            });

            $('#txtICD10Name').focus(function () {
                if ($('#txtICD10Name').val() == 'Unknown') {
                    $('#txtICD10Name').val('');
                }
            });

            $('#txtICD10Name').blur(function () {
                if ($('#txtICD10Name').val() == '') {
                    $('#txtICD10Name').val('Unknown');
                }
            });

            $('#caseStartDate .input-group.date').datepicker({
                format: "dd M yyyy",
                autoclose: true,
                endDate: new Date()
            }).on("show", function (e) {
                $("div.datepicker").css("z-index", 1000000);
            });


            $('#caseEndDate .input-group.date').datepicker({
                format: "dd M yyyy",
                autoclose: true,
                endDate: new Date()
            }).on("show", function (e) {
                $("div.datepicker").css("z-index", 1000000);
            });

            $('#caseStartDate .input-group.date').on('changeDate', function () {
                $('#caseEndDate .input-group.date').datepicker('setStartDate', $('#caseStartDate .input-group.date').datepicker('getDate'));
            });

            $('#caseStartDate .input-group.date').datepicker('setStartDate', new Date('@Model.Patient.BirthDate.Value.ToString("yyyy/MM/dd")'));

            $('#assignDate .input-group.date').datepicker({
                format: "dd M yyyy",
                autoclose: true,
                endDate: new Date()
            }).on("show", function (e) {
                $("div.datepicker").css("z-index", 1000000);
            });

            $('#dischargeDate .input-group.date').datepicker({
                format: "dd M yyyy",
                autoclose: true,
                endDate: new Date()
            }).on("show", function (e) {
                $("div.datepicker").css("z-index", 1000000);
            });

            $(".chosen-select").chosen({
                "width": "100%",
                disable_search_threshold: 5
            });
            $('#ProviderID').on('change', function () {
                $.get("/Client/GetAccounts?ProviderId=" + encodeURIComponent($('#ProviderID').val()) + "&AccountId=" + encodeURIComponent(selectedAccountID) + "&CaseId=" + encodeURIComponent('@Model.CaseId') + "&multi=true", function (data) {
                    $('#individual').html(data);
                    $("#AccountID").chosen({
                        "width": "100%",
                        "height": "10px"
                    });

                    $("#AccountID").on('change', function (evt, params) {
                        if (params.selected != null) {
                            selectedIndividuals.push(params.selected);
                        }

                        if (params.deselected != null) {

                            var i = selectedIndividuals.indexOf(params.deselected);
                            if (i != -1) {
                                selectedIndividuals.splice(i, 1);
                            }
                        }
                    });

                });
            });

            tableProvider = $('.tblProvidersView').dataTable({
                "processing": true,
                "serverSide": true,
                "bFilter": false,
                "oLanguage": {
                    "sProcessing": "<img src='/Images/loading.gif' height='25'/>"
                },
                "ajax": {
                    "url": "/Patient/PatientProviders",
                    "type": "POST",
                    "data": {
                        Patient: '@Model.Patient.GetId().ToString("N")'
                    }
                },
                "order": [[0, "asc"]],
                "bAutoWidth": false,
                "columns": [
                    { "data": "CaseICD10" },
                    { "data": "Provider" },
                    { "data": "AccountFullname" },
                    { "data": "AccountRoles" },
                    { "data": "AssignedDate" },
                    { "data": "DischargeDate" }
                ],
                "drawCallback": function (settings) {
                    $('.tblProvidersView tbody').on('click', 'tr', function () {
                        if ($(this).hasClass('selected')) {
                            $(this).removeClass('selected');
                        }
                        else {
                            tableProvider.DataTable().$('tr.selected').removeClass('selected');
                            $(this).addClass('selected');
                        }
                    });

                    $('.tblProvidersView tbody').on('dblclick', 'tr', function () {
                        editProvider(tableProvider.DataTable().rows().row(this).data());
                    });
                }
            });



            $('#caseStartDate').children('div').children('input').first().val('@Model.StartDate.ToString("dd MMM yyyy")');
            @if (Model.EndDate.HasValue)
            {
             <text> $('#caseEndDate').children('div').children('input').first().val('@Model.EndDate.Value.ToString("dd MMM yyyy")'); </text>
            }

            @if (Model.ImpairmentGroupId != null)
            {
            <text>  $('#ImpairmentGroupId').val('@Model.ImpairmentGroupId');
            $('#ImpairmentGroupId').trigger("chosen:updated");</text>
            }


            $('#btn-save-new-details').click(function () {


                var model = {
                    ICD10ID: $('#txtICD10Name').val(),
                    StartDate: $('#caseStartDate').children('div').children('input').first().val(),
                    EndDate: $('#caseEndDate').children('div').children('input').first().val(),
                    ImpairmentGroupId: $('#ImpairmentGroupId').val(),
                    PatientId: $('#patientId').val(),
                    CaseId: $('#caseId').val(),
                    ReferringDoctor: $('#txt-referringdoctor').val(),
                    ReferringDoctorContact: $('#txt-referringdoctorcontact').val(),
                    ReferringDoctorEmail: $('#txt-referringdoctoremail').val(),
                    ReferringDoctorPracticeNumber: $('#txt-referringdoctorpracticenumber').val(),
                    TreatingDoctor: $('#txt-treatingdoctor').val(),
                    TreatingDoctorContact: $('#txt-treatingdoctorcontact').val(),
                    TreatingDoctorEmail: $('#txt-treatingdoctoremail').val(),
                    TreatingDoctorPracticeNumber: $('#txt-treatingdoctorpracticenumber').val(),
                    AdmissionStatusId: $('#AdmissionStatusID').val()
                };
                Post("/Patient/NewCase", model,
                function (data) {

                    if (data.Success == true) {
                        window.location = "/Patient/Case?Case=@Request["Case"]";
                    } else {
                        toastr.error(data.Message);
                    }
                });

            });


            if (getUrlParameter('popup') == 'true') {

                $('#discharge-block').css('display', 'none');
                $('#individual-block').css('display', 'block');
                $('#providers-block').css('display', 'block');
                $('#assignDate .input-group.date').datepicker('setDate', new Date().getDate() + "/" + (new Date().getMonth() + 1) + "/" + new Date().getFullYear());
                $("#popupAdd").modal("show");
            }

            @{

                if (UserHelper.SelectedClientType != null) {

                if (UserHelper.SelectedClientType.Equals("Provider") && Request["popup"] == "true")
                {


                    if (perms.FirstOrDefault(x => x.PermissionDescription == "Case Manager" || x.PermissionDescription == "Administrator") != null)
                    {
                         <text>
            $('#ProviderID').attr('disabled', true);
            </text>
                    }
                 <text>
            $('#ProviderID').val('@SADFM.Data.Models.BaseModel.EncryptId(UserHelper.SelectedClientId)');

            $('#ProviderID').trigger("chosen:updated");
            $('#ProviderID').change();
            </text>

                }
                }

            }


            $('#AdmissionStatusID').val('@Model.AdmissionStatusId');
            $('#AdmissionStatusID').trigger("chosen:updated");

            $('.tblCarePlansView').dataTable({
                "processing": true,
                "serverSide": true,
                "bFilter": false,
                "oLanguage": {
                    "sProcessing": "<img src='/Images/loading.gif' height='25'/>"
                },
                "ajax": {
                    "url": "/Patient/GetPatient",
                    "type": "POST",
                    "data": {
                        PatientId: '@Model.Patient.GetId().ToString("N")'
                    }
                },
                "order": [[0, "asc"]],
                "bAutoWidth": false,
                "columns": [
                    { "data": "Name" },
                    { "data": "Frequency" }
                ]
            });


            $('.tblCarePlansView tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    $('.tblCarePlansView').find('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });

            $('#btn-deletecareplan').click(function () {

                var data = $('.tblCarePlansView').DataTable().row('.selected').data();

                //Make ajax call to delete.

                Post("/Patient/RemoveScale", { patientId: '@Model.Patient.GetId().ToString("N")', scaleId: data.ScaleId },
                              function () {
                                  $('.tblCarePlansView').DataTable().draw(false);
                              });

            });

            $('#btn-newcareplan').click(function () {

                $('#ScaleID option').css('display', 'block');

                var selectedScales = $('.tblCarePlansView').DataTable().rows().data()
                for (i = 0; i < selectedScales.length; i++) {
                    $('#ScaleID option[value="' + selectedScales[i].ScaleId + '"]').css('display', 'none');;
                }

                $('#ScaleID').trigger("chosen:updated");


                $('#ScaleID').val('');
                $('#FrequencyID').val('');

                $('#addCareDialog').modal('show');

            });

            $('#addCareDialogSave').unbind();
            $('#addCareDialogSave').click(function () {

                Post("/Patient/AddScale", { patientId: '@Model.PatientId', scaleId: $('#ScaleID').val(), frequencyId: $('#FrequencyID').val() },
                             function () {
                                 $('.tblCarePlansView').DataTable().draw(false);
                             });

                $('#addCareDialog').modal('hide');
            });

            $('#roles input[type=checkbox]').click(function () {

                AddIndividuals();
            });

        });

        function sendMailToReferringDoctor() {
            window.location = "@Url.Action("DownloadPatientProgressReport", "Report")?" + $('#sendPatientProgressReport #query').val() + "&save=true";
        }

        function showPatientProgressReportModal(queryUrl) {
            $('#sendPatientProgressReport').modal('show');
            $('#sendPatientProgressReport #query').val(queryUrl);
        }

        function editProvider(data) {

            $('#ProviderID').val(data.ProviderId);
            $('#ProviderID').trigger("chosen:updated");
            selectedAccountID = data.AccountID;
            $("#ProviderID").trigger("change");

            $('#caseId').val(data.CaseId);

            $('#assignDate .input-group.date').datepicker("setDate", data.AssignedDate);
            $('#dischargeDate .input-group.date').datepicker("setDate", data.DischargeDate);

            $("#btn-addprovidersave").unbind("click");
            $('#btn-addprovidersave').click(function () {

                var model = {

                    AssignedTimestamp: $('#assignDate').children('div').children('input').first().val(),
                    DischargedTimestamp: $('#dischargeDate').children('div').children('input').first().val(),
                    PatientProviderId: data.PatientProviderId
                };

                Post("/Patient/AddPatientProvider", model,
                                 function (response) {

                                     if (response.hasClosedCase) {

                                         showPatientProgressReportModal(response.query);
                                     }

                                     $("#popupAdd").modal("hide");
                                     $('.tblProvidersView').dataTable()._fnAjaxUpdate();
                                 });

            });

            $('#discharge-block').css('display', 'block');
            $('#individual-block').css('display', 'none');
            $('#role-groups').css('display', 'none');
            $('#providers-block').css('display', 'none');
            $("#btn-addprovidersave").html("Save");
            $("#popupAdd").modal("show");

        }

        function AddIndividuals() {

            $('#individual #AccountID option:selected').each(function () {
                var element = $(this);
                element.removeAttr('selected');
            });

            $('#individual #AccountID').trigger("chosen:updated");

            $('#roles input[type=checkbox]').each(function () {

                var isChecked = $(this).is(':checked');
                var group = $(this).val();

                $('#individual #AccountID option').each(function () {
                    var element = $(this);

                    var groups = element.attr('data-group').split('|');

                    for (i = 0; i < groups.length; i++) {
                        if (groups[i] == group && isChecked) {
                            element.attr('selected', 'selected');
                        }
                    }

                    if (selectedIndividuals.indexOf(element.attr('value')) != -1) {
                        element.attr('selected', 'selected');
                    }

                });

            });


            $('#individual #AccountID').trigger("chosen:updated");
        }


        function getUrlParameter(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }
    </script>
}
