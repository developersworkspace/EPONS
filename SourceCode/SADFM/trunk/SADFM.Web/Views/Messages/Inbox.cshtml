@model SADFM.Data.Models.Account
@{
    ViewBag.Title = "My Messages";
    MvcHtmlString heading = new MvcHtmlString(ViewBag.PatientContext == null ? "My Messages" : string.Format("Messages concerning Patient <b>{0} {1}</b>", ViewBag.PatientContext.FirstName, ViewBag.PatientContext.LastName));
    string patientId = ViewBag.PatientContext == null ? null : ViewBag.PatientContext.GetId().ToString("N");
}
<style>
    .note-editor {
        height: 200px !important;
        overflow-y: auto;
    }

    .note-editable {
        background-color: #DEE0E0;
        min-height: 200px !important;
    }

    tbody tr {
        cursor: pointer;
    }

        tbody tr:hover {
            background-color: #ffff99 !important;
        }
</style>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12 animated fadeInRight">
            <div class="mail-box-header">
                @if (ViewBag.PatientContext != null)
                {
                    <div class="pull-right mail-search">
                        @if (patientId != null)
                        {
                            <button type="button" class="btn btn-sm btn-primary" id="btnNewMessage">
                                <i class="fa fa-plus"></i>&nbsp;New Message
                            </button>
                        }
                    </div>
                }
                <button class="btn btn-primary" id="btn-back" title="Back">
                    <img src="~/Content/images/back.png" style="height: 22px" /></button>
                &nbsp;
                <h2 style="display: inline-block">
                    @heading (@Model.UnreadMessageCount)
                </h2>
            </div>
            <div class="ibox-content">
                <table class="table table-striped table-bordered table-hover dataTables-example" id="messages">
                    <thead>
                        <tr>
                            <td>Select</td>
                            <th>Sent</th>
                            <th>Patient</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Message</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td>Select</td>
                            <th>Sent</th>
                            <th>Patient</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Message</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_Message")

@if (patientId != null)
{
    <div class="modal inmodal" id="newMessage" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content animated fadeIn">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">New Message</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12">
                            @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Data.DataAccess.Account.GetAccountsForPatient(patientId, SADFM.Web.Shared.UserHelper.GetActivePermissions(SADFM.Web.Shared.UserHelper.GetCurrentAccount()), SADFM.Web.Shared.UserHelper.SelectedClientType), "ddlTo", s => s.ID, s => s.DisplayName, "chosen-select", dataPlaceholder: "Select recipients", multiple: true)
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="mail-text h-200">
                                <div class="summernote" style="background: white;">
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="btnSendNewMessage">Send</button>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    @Styles.Render("~/plugins/iCheckStyles")
    @Styles.Render("~/plugins/dataTablesStyles")
    @Styles.Render("~/plugins/summernoteStyles")
    @Styles.Render("~/plugins/chosenStyles")
    <style>
        .messageunread {
            font-weight: bold;
            color: navy;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/summernote")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/typeahead")
    <script type="text/javascript">
        var table, refreshFunc;
        $(document).ready(function () {

            refreshFunc = null;


            $(".chosen-select").chosen({
                "width": "100%",
                disable_search_threshold: 5
            });

            $('#btn-back').click(function () {
                if (getUrlParameter('Patient') != null) {
                    window.location = "/Patient/Details?Patient=" + getUrlParameter('Patient');
                } else {
                    window.location = "/";
                }
            });

            table = $("#messages").dataTable({
                "processing": true,
                "serverSide": true,
                "oLanguage": {
                    "sProcessing": "<img src='/Images/loading.gif' height='25'/>"
                },
                "ajax": {
                    "url": "/Messages/List",
                    "type": "POST",
                    "data": function (d) {
                        var checked = new Array();
                        $("#messages input:checked").parent().parent().parent().each(function () {
                            checked.push(table.DataTable().data()[table.DataTable().data().rows(this)[0]].ID);
                        });
                        return $.extend({}, d, {
                            "option": refreshFunc,
                            "checked": checked,
                            "patientid": "@patientId"
                        });
                    }
                },
                "order": [[1, "desc"]],
                "bAutoWidth": false,
                "columns": [
                    { "data": null, orderable: false, defaultContent: "<input type=\"checkbox\" class=\"i-checks\">", width: "35px" },
                    { "data": "SentTimestamp" },
                    { "data": "Patient" },
                    { "data": "From" },
                    { "data": "RecipientSummary" },
                    { "data": "MessageSummary" }
                ],
                "dom": "<'row'<'col-sm-4'l><'col-sm-4'<'#inboxtools'>><'col-sm-4'f>r>" + "t" + "<'row'<'col-sm-6'i><'col-sm-6'p>>",
                "initComplete": function (settings, json) {
                    //$("div#inboxtools").html('<div class="mail-tools tooltip-demo m-t-md"><button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="left" title="Refresh inbox"><i class="fa fa-refresh"></i>&nbsp;Refresh</button><button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Mark as read"><i class="fa fa-eye"></i></button><button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Archive"><i class="fa fa-trash-o"></i></button></div>');
                    $("div#inboxtools")
                        .html('<ul class="pagination" style="margin:0px"><li class="paginate_button"><a href="#"><i class="fa fa-refresh"></i>&nbsp;Refresh</a></li><li><a href="#"><i class="fa fa-eye"></i>&nbsp;Mark Unread</a></li><li><a href="#"><i class="fa fa-external-link-square"></i>&nbsp;Archive</a></li></ul>')
                        .css('text-align', 'center');
                    $("#inboxtools .fa-refresh").parent().click(function () {
                        table.DataTable().ajax.reload();
                    });
                    $("#inboxtools .fa-eye").parent().click(function () {
                        refreshFunc = "unread";
                        table.DataTable().ajax.reload();
                    });
                    $("#inboxtools .fa-external-link-square").parent().click(function () {
                        refreshFunc = "archive";
                        table.DataTable().ajax.reload();
                    });
                },
                "createdRow": function (row, data, index) {
                    if (data.IsRead == "False") {
                        $(row).addClass("messageunread")
                    }
                },
                "drawCallback": function (settings) {
                    refreshFunc = null;
                    SetMyMessages(settings.json.extraData);

                    $('#messages tbody').on('click', 'tr', function () {
                        if ($(this).hasClass('selected')) {
                            $(this).removeClass('selected');
                        }
                        else {
                            table.DataTable().$('tr.selected').removeClass('selected');
                            $(this).addClass('selected');
                        }
                    });

                    $('#messages tbody').on('dblclick', 'tr', function () {
                        var tr = this;
                        $.ajax({
                            url: "/Messages/Read",
                            data: { ID: table.DataTable().rows().row(tr).data().ID },
                            type: "POST",
                            dataType: "json",
                            success: function (data) {
                                ShowMessage(data.Message);
                                SetMyMessages(data.NewUnreadCount);
                                $(tr).removeClass("messageunread");
                            },
                            error: function () {
                                toastr.error("Couldn't read the message from the server", 'ERROR!');
                            }
                        });
                    });

                    $('.i-checks').iCheck({
                        checkboxClass: 'icheckbox_square-green',
                        radioClass: 'iradio_square-green',
                    });
                }
            });

            $("#btnNewMessage").click(function () {
                $("#searchTo").val("");
                $("#ddlTo").remove("option");
                $("#ddlTo").trigger("chosen:updated");
                $("#newMessage").modal("show");
            });

            $('.chosen-select').chosen({ width: "100%" });

            $('.summernote').summernote({
                toolbar: [
                  ['style', ['bold', 'italic', 'underline', 'clear']],
                  ['fontsize', ['fontsize']],
                  ['color', ['color']],
                  ['para', ['ul', 'ol', 'paragraph']]
                ]
            });

            $("#btnSendNewMessage").click(function () {
                var recipients = new Array();
                $("#ddlTo option:selected").each(function () {
                    recipients.push($(this).html());
                });
                $.ajax({
                    url: "/Messages/SendMessage",
                    type: "POST",
                    dataType: "json",
                    data: {
                        To: recipients,
                        Body: $('.summernote').code(),
                        "patientid": "@patientId"
                    },
                    success: function () {
                        $("#newMessage").modal("hide");
                        table.DataTable().ajax.reload();
                    },
                    error: function () {
                        toastr.error("Could not send your message.  PLease try again later");
                    }
                });
            });
        });

        function getUrlParameter(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }

        function SetMyMessages(count) {
            $(".mail-box-header h2").html("@heading (" + count + ")");
        }
    </script>
}