@using SADFM.Data.Models;
@using SADFM.Web.Models;
@using SADFM.Web.Shared;
@model Account
@{
    ViewBag.Title = "User Details";


    List<SADFM.Data.Models.TrainingReportItem> trainingReport = SADFM.Data.DataAccess.Account.GetTrainingReport(Model.GetId(), Model.Permissions, (Guid?)null);
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Profile - @Model.Username</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Home</a>
            </li>
            <li>
                <a href="/Administration/Users">Users</a>
            </li>
            <li class="active">
                <strong>User Details</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
        <br />
        <div class="row" style="text-align: center; margin-top:15px">
            <div class="col-xs-12">
                <a href="/Administration/Users" class="btn btn-warning btn-sm" style="width: 90%;"><i class="fa fa-close"></i>&nbsp;Close</a>
            </div>
        </div>
    </div>
</div>

@if (Model == null)
{
    Html.Partial("_GenericError.cshtml",
        new GenericError { Heading = "Username not found", Body = "We cannot find the user details you are looking for" });
}
else
{
    <div class="wrapper wrapper-content">
        <div class="row animated fadeInRight">
            <div class="col-md-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>@Model.FirstName @Model.LastName</h5>
                    </div>
                    <div>
                        <div class="ibox-content no-padding border-left-right">
                            <img alt="image" class="img-responsive" src="@Model.Avatar" style="margin: auto;">
                        </div>
                        <div class="ibox-content profile-content">
                            <div class="user-button">
                                <div class="row">
                                    <div class="col-md-12">
                                        <button type="button" class="btn btn-danger btn-block" id="resetPassword"><i class="fa fa-lock"></i>&nbsp;Reset Password</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>User Details</h5>
                    </div>
                    <div class="ibox-content">

                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText("TitleLabel")</label>
                                <div class="col-lg-9">
                                    @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Data.DataAccess.ListItem.GetList("Title"), "Title", l => l.ID, l => l.Name, "chosen-select", selected: Model.TitleId, dataPlaceholder: "Select title")
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText("RoleLabel")</label>
                                <div class="col-lg-9">
                                    @SADFM.Web.Shared.HtmlHelper.DropdownBox(SADFM.Data.DataAccess.ListItem.GetList("Role").OrderBy(x => x.SortOrder).ToList(), "Role", l => l.ID, l => l.Name, "chosen-select", l => l.Name, dataPlaceholder: "Select role", orderChildrenBy: li => li.SortOrder, multiple: true)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText("FirstNameLabel")</label>
                                <div class="col-lg-9">
                                    <input type="text" id="firstName" style="width: 100%" placeholder="@Library.GetText("FirstNameLabel")" value="@Model.FirstName" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Surname</label>
                                <div class="col-lg-9">
                                    <input type="text" id="surname" style="width: 100%" placeholder="Surname" value="@Model.LastName" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText("EmailAddressLabel")</label>
                                <div class="col-lg-9">
                                    <input type="email" id="emailAddress" style="width: 100%" placeholder="@Library.GetText("EmailAddressLabel")" value="@Model.EmailAddress" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText(string.Format("{0}Label", Model.IDType))</label>
                                <div class="col-lg-9">
                                    <input type="text" id="idNumber" style="width: 100%" placeholder="@Library.GetText(string.Format("{0}Label", Model.IDType))" value="@Model.IDNumber" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">@Library.GetText("ContactNumberLabel")</label>
                                <div class="col-lg-9">
                                    <input type="text" id="contact" style="width: 100%" placeholder="@Library.GetText("ContactNumberLabel")" value="@Model.ContactNumber" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-3">
                                </div>
                                <div class="col-lg-9">
                                    <button type="button" class="btn btn-primary btn-block btn-save"><i class="fa fa-save"></i>&nbsp;Save</button>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>

            </div>
        </div>
        <div class="row animated fadeInRight">
            <div class="col-md-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Permissions</h5>
                        <div class="ibox-tools">
                            <button type="button" class="btn btn-primary btn-newpermission" data-backdrop="static" data-keyboard="false">
                                <i class="fa fa-plus"></i>&nbsp;Add Permission
                            </button>
                        </div>
                    </div>
                    <div>
                        <div class="ibox-content">
                            <table class="table table-striped table-bordered table-hover tblData">
                                <thead>
                                    <tr>
                                        <th>Client</th>
                                        <th>Permission</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Client</th>
                                        <th>Permission</th>
                                        <th>Action</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Training Report</h5>
        </div>
        <div class="ibox-content">
            <table class="table table-striped table-bordered table-hover tblReport">
                <thead>
                    <tr>
                        <th>Scale</th>
                        <th>Grade</th>
                    </tr>
                </thead>

                <tbody>

                    @foreach (SADFM.Data.Models.TrainingReportItem tri in trainingReport)
                    {
                        <tr>
                            <th>
                                @tri.Scale
                            </th>
                            <th>
                                @tri.Grade
                            </th>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal inmodal" id="popupNewPermission" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content animated fadeIn">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">New permission</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            @SADFM.Web.Shared.HtmlHelper.DropdownBox(
         SADFM.Data.DataAccess.Client.GetClients().OrderBy(c => c.Name).ToList(), "ClientID", l => l.ID, l => l.Name, "chosen-select",
         dataPlaceholder: "Select client",
         optionParameters: new List<Func<SADFM.Data.Models.Client, KeyValuePair<string, string>>> { c => { return new KeyValuePair<string, string>("Type", c.Type); } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" id="newPermissionList">
                            <select class="chosen-select" data-placeholder="Select permission" id="ddlPermissionID">
                                <option></option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary popupNewPermission_savenewpermission disabled">Save</button>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("/Views/Shared/_ChangePassword.cshtml", new SADFM.Web.Models.ChangePasswordModel { AccountID = Model.ID, RequestOldPassword = false, Username = Model.Username })
}
@section scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/chosen")
    <script type="text/javascript">
        $(function () {

            $('.tblData').dataTable({
                paging: false,
                ordering: false,
                searching: false,
                info: false,
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/Administration/AccountPermissionList/@Model.GetId()",
                    "type": "POST"
                },
                "order": [[0, "asc"]],
                "bAutoWidth": false,
                "columns": [
                    { "data": "ClientName" },
                    { "data": "PermissionDescription" },
                    { "data": null, orderable: false, defaultContent: "<button class='btn btn-sm btn-danger btn-edit'>X</button>", "sClass": "right" }],
                "drawCallback": function () {
                    $(".btn-edit").click(function () {
                        dropPermission($('.tblData').DataTable().row($(this).closest('tr')).data());
                    });
                }
            });

            $(".btn-save").click(function () {
                saveProfile();
                $(".btn-save").addClass("disabled").html("Saving...");
            });

            $(".chosen-select").chosen({ width: "100%" });

            $('#Role').val([@MvcHtmlString.Create(string.Join(",", Model.AccountRoles.Select(x => string.Format("'{0}'", x.RoleID)).ToArray()))]);
            $('#Role').trigger("chosen:updated");


            $("#ClientID").change(function () {
                var clientType = $("#ClientID option:selected").attr("Type");
                $.ajax({
                    url: "/Administration/UserPermissionList",
                    type: "POST",
                    data: "ClientType=" + clientType,
                    success: function (data) {
                        $("#ddlPermissionID").html("<option></option>");
                        for (i = 0; i < data.length; i++) {
                            $("#ddlPermissionID").append("<option value='" + data[i].ID + "'>" + data[i].Description + "</option>");
                        }
                        $("#ddlPermissionID").change(function () {
                            $(".popupNewPermission_savenewpermission").removeClass("disabled");
                        });
                        $("#ddlPermissionID").trigger("chosen:updated");
                    },
                    error: function () {
                        alert("Cannot determine permissions for client type " + clientType);
                    }
                });
            });

            @if (!UserHelper.GetCurrentAccount().AccountType.Equals("SuperAdmin"))
        {
            <text>
            $('#ClientID').val('@BaseModel.EncryptId(UserHelper.SelectedClientId)');
            $('#ClientID').trigger("chosen:updated");
            $('#ClientID').prop('disabled', true).trigger("chosen:updated");

            var clientType = $("#ClientID option:selected").attr("Type");
            $.ajax({
                url: "/Administration/UserPermissionList",
                type: "POST",
                data: "ClientType=" + clientType,
                success: function (data) {
                    $("#ddlPermissionID").html("<option></option>");
                    for (i = 0; i < data.length; i++) {
                        $("#ddlPermissionID").append("<option value='" + data[i].ID + "'>" + data[i].Description + "</option>");
                    }
                    $("#ddlPermissionID").change(function () {
                        $(".popupNewPermission_savenewpermission").removeClass("disabled");
                    });
                    $("#ddlPermissionID").trigger("chosen:updated");
                },
                error: function () {
                    alert("Cannot determine permissions for client type " + clientType);
                }
            });
            </text>
        }


            $(".btn-newpermission").click(function () {
                $("#popupNewPermission").modal("show");
            });

            $(".popupNewPermission_savenewpermission").click(function () {
                Post(
                    "/Administration/AddPermission",
                    {
                        AccountID: "@Model.ID",
                        ClientID: $("#ClientID option:selected").val(),
                        PermissionID: $("#ddlPermissionID option:selected").val()
                    },
                function () {
                    $('.tblData').DataTable().ajax.reload();
                    $("#popupNewPermission").modal("hide");
                });
            });

            $("#resetPassword").click(function () {
                ShowChangePassword();
            });

        });

        function saveProfile() {


            var AccountRoles = new Array();

            if ($("#Role").val() != null) {
                for (i = 0; i < $("#Role").val().length; i++) {
                    AccountRoles.push({
                        RoleId: $("#Role").val()[i]
                    });
                }
            }

            $.ajax({
                url: "/Account/SaveProfile",
                type: "POST",
                dataType: "json",
                data: {
                    FirstName: $("#firstName").val(),
                    LastName: $("#surname").val(),
                    EmailAddress: $("#emailAddress").val(),
                    TitleId: $("#Title").val(),
                    AccountRoles: AccountRoles,
                    IDType: "@Model.IDType",
                    IDNumber: $("#idNumber").val(),
                    ContactNumber: $("#contact").val(),
                    Avatar: null,
                    ID: "@Model.ID",
                    Age: "@Model.Age"
                },
                success: function (result) {
                    if (result.Success) {
                        window.location = "/Administration/Users";
                    } else {
                        toastr.error(result.Message, 'ERROR!');
                    }
                },
                error: function (x1, x2, x3) {
                    toastr.error(x2, 'ERROR!');
                }
            });
        }

        function dropPermission(data) {
            @if (Model.AccountType != "SuperAdmin")
            {
                <text>
            if ($('.tblData').dataTable().api().data().length < 2) {
                MessageDialog("Cannot delete", "A user must have at least one permission", "btn-danger");
                return;
            }
            </text>
            }
            ConfirmDialog(
                "Delete permission",
                "Delete " + data.PermissionDescription + " permission for @Model.FirstName for " + data.ClientName,
                function () {
                    Post("/Administration/DeletePermission", { ID: data.ID }, function () {
                        $('.tblData').DataTable().ajax.reload();
                    });
                    $("#layoutDialog").modal("hide");

                },
                "btn-danger");


        }

    </script>
    <script src="/Scripts/crypto.js"></script>
}
@section Styles {
    @Styles.Render("~/plugins/dataTablesStyles")
    @Styles.Render("~/plugins/chosenStyles")
}